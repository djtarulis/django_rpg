# Generated by Django 5.1.5 on 2025-02-06 07:30

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('health', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(default='')),
                ('price', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[('weapon', 'Weapon'), ('armor', 'Armor'), ('potion', 'Potion'), ('misc', 'Miscellaneous')], default='misc', max_length=20)),
                ('health_bonus', models.IntegerField(default=0)),
                ('strength_bonus', models.IntegerField(default=0)),
                ('dexterity_bonus', models.IntegerField(default=0)),
                ('intelligence_bonus', models.IntegerField(default=0)),
                ('charisma_bonus', models.IntegerField(default=0)),
                ('ethics_bonus', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='PlayerClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('description', models.TextField()),
                ('base_health', models.IntegerField(default=20)),
                ('base_strength', models.IntegerField(default=10)),
                ('base_dexterity', models.IntegerField(default=10)),
                ('base_intelligence', models.IntegerField(default=10)),
                ('base_charisma', models.IntegerField(default=10)),
                ('base_ethics', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=50)),
                ('gold_reward', models.IntegerField(default=10)),
                ('exp_reward', models.IntegerField(default=10)),
            ],
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(verbose_name='Religion Template')),
                ('bonus1', models.IntegerField(default=1)),
                ('bonus1_description', models.TextField(verbose_name='Bonus description')),
                ('bonus2', models.IntegerField(default=1)),
                ('bonus2_description', models.TextField(verbose_name='Bonus description')),
                ('bonus3', models.IntegerField(default=1)),
                ('bonus3_description', models.TextField(verbose_name='Bonus description')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('level', models.IntegerField(default=1)),
                ('experience', models.IntegerField(default=0)),
                ('experience_to_next_level', models.IntegerField(default=100)),
                ('currency', models.IntegerField(default=1000)),
                ('health', models.IntegerField(default=10)),
                ('strength', models.IntegerField(default=10)),
                ('dexterity', models.IntegerField(default=10)),
                ('intelligence', models.IntegerField(default=10)),
                ('charisma', models.IntegerField(default=10)),
                ('ethics', models.IntegerField(default=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='player_profile', to=settings.AUTH_USER_MODEL)),
                ('player_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpg_app.playerclass')),
                ('player_religion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='rpg_app.religion')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_item', to='rpg_app.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_inventory', to='rpg_app.player')),
            ],
        ),
    ]
